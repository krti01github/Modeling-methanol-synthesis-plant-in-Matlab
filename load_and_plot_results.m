% Script for loading and plotting results generated by main.m.
% Methanol synthesis simulator, Bio-CCU
% Author: Kristian Tiiro
% Date: 15.3.2024

% IN ARRAYS REPRESENTING ALL SIX CHEMICAL COMPONENTS AS ROW ELEMENTS, 
% THE ORDER IS:
% [1.CO2, 
% 2.CO, 
% 3.H2, 
% 4.H2O, 
% 5.CH3OH, 
% 6.N2]

close all
clear

% Load CSVs into tables
t_data_table = readtable(['simulation_results/official_results/' ...
    'pulp_mill_min_case_opt_t_results_20240430_2039.csv']);
z_data_table = readtable(['simulation_results/official_results/' ...
    'pulp_mill_min_case_opt_z_results_0_d_20240430_2039.csv']);

% Tables into matrices
% First columns are texts explaining the variables and units. See tables
t_data_matrix = table2array(t_data_table(:,2:end));
z_data_matrix = table2array(z_data_table(:,2:end));

N_i = 6-1;
N_reac = 2-1;
t_d = 0; % Only for plotting

% Load individual variables
t_span = t_data_matrix(1, :);
m_dot_product = t_data_matrix(2, :);
m_dot_dist_bot = t_data_matrix(3, :);
m_dot_gas_KO2 = t_data_matrix(4, :);
y_molar_KO2 = t_data_matrix(5:5+N_i, :);
m_dot_purge = t_data_matrix(6+N_i, :);
y_molar_purge = t_data_matrix(7+N_i:7+2*N_i, :);
Q_per_kg_CH3OH = t_data_matrix(8+2*N_i, :);
W_per_kg_CH3OH = t_data_matrix(9+2*N_i, :);
yield_CO2 = t_data_matrix(10+2*N_i, :);
yield_H2 = t_data_matrix(11+2*N_i, :);
conversion_CO2 = t_data_matrix(12+2*N_i, :);
conversion_H2 = t_data_matrix(13+2*N_i, :);
selectivity_H2 = t_data_matrix(14+2*N_i, :);
selectivity_CO2 = t_data_matrix(15+2*N_i, :);
T_tube_avg = t_data_matrix(16+2*N_i, :);
T_tube_max = t_data_matrix(17+2*N_i, :);
r_avg = t_data_matrix(18+2*N_i:18+2*N_i+N_reac, :);
eta_reac_avg = t_data_matrix(19+2*N_i+N_reac:19+2*N_i+2*N_reac, :);
a_cat_avg = t_data_matrix(end, :);

z_span = z_data_matrix(1, :);
y_molar_tube = z_data_matrix(2:2+N_i, :);
T_tube = z_data_matrix(3+N_i, :);
T_shell = z_data_matrix(4+N_i, 1);
P_tube = z_data_matrix(5+N_i, :);
r = z_data_matrix(6+N_i:6+N_i+N_reac, :);
eta_reac = z_data_matrix(7+N_i+N_reac:7+N_i+2*N_reac, :);
y_molar_eq = z_data_matrix(8+N_i+2*N_reac:8+2*N_i+2*N_reac, :);
a_cat = z_data_matrix(end, :);

plot_vs_time( ...
    t_span, ...
    m_dot_product, ...
    m_dot_dist_bot, ...
    m_dot_gas_KO2, ...
    y_molar_KO2, ...
    m_dot_purge, ...
    y_molar_purge, ...
    Q_per_kg_CH3OH, ...    
    W_per_kg_CH3OH, ...
    yield_CO2, ...
    yield_H2, ...
    conversion_CO2, ...
    conversion_H2, ...
    selectivity_H2, ...
    selectivity_CO2, ...
    T_tube_avg, ...
    T_tube_max, ...
    r_avg, ...
    eta_reac_avg, ...
    a_cat_avg ...
    )

plot_vs_z( ...
    z_span, ...
    y_molar_tube, ...
    T_tube, ...
    T_shell, ...
    P_tube, ...
    r, ...
    eta_reac, ...
    y_molar_eq, ...
    a_cat, ...
    t_d)

% -- Parvasi et al. 2008
% Catalyst activity
% parvasi_a_cat = readtable(['simulation_results/official_results/' ...
%    'parvasi_2008_a_cat.csv']);
% parvasi_a_cat = table2array(parvasi_a_cat)';
% parvasi_t = parvasi_a_cat(1,:); parvasi_a_cat = parvasi_a_cat(2,:);
% parvasi_a_cat = interp1(parvasi_t, parvasi_a_cat, t_span);
% parvasi_a_cat(1) = 1;
% figure(18)
% clf(figure(18), 'reset')
% hold on
% title('Average catalyst activity in time')
% plot(t_span, 100*a_cat_avg(1, :), '*-', 'MarkerSize', 10, ...
%     'DisplayName','This work')
% plot(t_span, 100*parvasi_a_cat(1, :), '-', 'MarkerSize', 10, ...
%     'DisplayName','[Parvasi et al. 2008]')
% xlabel('Time [days]')
% ylabel('Average catalyst activity factor, [%]')
% grid on
% legend('show')
% 
% % Mass flows
% parvasi_m_dot_product = readtable(['simulation_results/official_results/' ...
%    'parvasi_2008_MeOH_ton_per_d.csv']); 
% parvasi_m_dot_product = table2array(parvasi_m_dot_product)';
% parvasi_t_2 = parvasi_m_dot_product(1,:); 
% parvasi_m_dot_product = parvasi_m_dot_product(2,:);
% parvasi_m_dot_product = interp1(parvasi_t_2, parvasi_m_dot_product, ...
%     t_span);
% % [ton/day] --> [kg / s]
% parvasi_m_dot_product = parvasi_m_dot_product * 1000 / (24*60*60);
% figure(10)
% clf(figure(10), 'reset')
% hold on
% title('Product stream mass flows in time')
% plot(t_span, m_dot_product(1, :), 'x-', 'DisplayName', ...
%     'This work', 'LineWidth', 1.0, 'MarkerSize', 8)
% plot(t_span, parvasi_m_dot_product(1, :), '-', 'DisplayName', ...
%     '[Parvasi et al. 2008]', 'LineWidth', 1.0, 'MarkerSize', 8)
% xlabel('Time [days]')
% ylabel('Product stream mass flow [kg/s]')
% grid on
% legend('show')
